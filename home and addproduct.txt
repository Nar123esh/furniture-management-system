import React, { useState } from "react";
import { Container, Row, Col, Form, FormGroup } from "reactstrap";
import "../styles/admin-addp.css";
import { toast } from "react-toastify";

import { db, storage } from "../firebase.config";
import { ref, uploadBytesResumable, getDownloadURL } from "firebase/storage";
import { collection, addDoc } from "firebase/firestore";

const Addproducts = () => {
  const [enterTitle, setEnterTitle] = useState("");
  const [enterShortDesc, setEnterShortDesc] = useState("");
  const [enterDescription, setEnterDescription] = useState("");
  const [enterCategory, setEnterCategory] = useState("");
  const [enterPrice, setEnterPrice] = useState("");
  const [enterProductImg, setEnterProductImg] = useState(null);
  const [loading, setLoading] = useState(false);

  const addProduct = async (e) => {
    e.preventDefault();

    try {
      setLoading(true);

      const docRef = await collection(db, "products");
      const storageRef = ref(storage, `productImages/${Date.now() + enterProductImg.name}`);
      const uploadTask = uploadBytesResumable(storageRef, enterProductImg);

      uploadTask.on(
        "state_changed",
        (snapshot) => {
          // Handle upload progress if needed
        },
        (error) => {
          console.error("Error uploading image:", error);
          toast.error("Image not uploaded!");
          setLoading(false);
        },
        async () => {
          try {
            const downloadURL = await getDownloadURL(uploadTask.snapshot.ref);
            await addDoc(docRef, {
              title: enterTitle,
              ShortDesc: enterShortDesc,
              Description: enterDescription,
              Category: enterCategory,
              Price: enterPrice,
              imgUrl: downloadURL,
            });

            toast.success("Product successfully added!");
          } catch (error) {
            console.error("Error adding product:", error);
            toast.error("Failed to add product!");
          } finally {
            setLoading(false);
          }
        }
      );
    } catch (error) {
      console.error("Error:", error);
      toast.error("An error occurred!");
    }
  };

  return (
    <section>
      <Container>
        <Row>
          <Col lg="13">
            <h4>Add Product</h4>
            <Form onSubmit={addProduct}>
              <FormGroup className="form__group">
                <span>Product title</span>
                <input
                  type="text"
                  placeholder="Double sofa"
                  value={enterTitle}
                  onChange={(e) => setEnterTitle(e.target.value)}
                  required
                />
              </FormGroup>
              <FormGroup className="form__group">
                <span>Short Description</span>
                <input
                  type="text"
                  placeholder="lorem..."
                  value={enterShortDesc}
                  onChange={(e) => setEnterShortDesc(e.target.value)}
                  required
                />
              </FormGroup>
              <FormGroup className="form__group">
                <span>Description</span>
                <input
                  type="text"
                  placeholder="Description....."
                  value={enterDescription}
                  onChange={(e) => setEnterDescription(e.target.value)}
                  required
                />
              </FormGroup>

              <div className="d-flex align-item-center justify-content-between gap-5">
                <FormGroup className="form__group w-50">
                  <span>Price</span>
                  <input
                    type="number"
                    placeholder="₹100"
                    value={enterPrice}
                    onChange={(e) => setEnterPrice(e.target.value)}
                    required
                  />
                </FormGroup>

                <FormGroup className="form__group w-100 ">
                  <span>Category</span>
                  <select
                    className="w-100 p-2"
                    value={enterCategory}
                    onChange={(e) => setEnterCategory(e.target.value)}
                    required
                  >
                    <option value="chair">Chair</option>
                    <option value="table">Table</option>
                    <option value="sofa">Sofa</option>
                    <option value="chair">Chair</option>
                  </select>
                </FormGroup>
              </div>

              <div>
                <FormGroup className="form__group">
                  <span>Product Image</span>
                  <input type="file" onChange={(e) => setEnterProductImg(e.target.files[0])} required />
                </FormGroup>
              </div>

              <button className="primary__btn" type="submit">
                Add product
              </button>
            </Form>
          </Col>
        </Row>
      </Container>
    </section>
  );
};

export default Addproducts;









import React, { useState } from "react";
import { Container, Row, Col, Form, FormGroup } from "reactstrap";
import "../styles/admin-addp.css";
import { toast } from "react-toastify";

import { db, storage } from "../firebase.config";
import { ref, uploadBytesResumable, getDownloadURL } from "firebase/storage";
import { collection, addDoc } from "firebase/firestore";
import { useNavigate } from "react-router-dom";

const Addproducts = () => {
  const [enterTitle, setEnterTitle] = useState("");
  const [enterShortDesc, setEnterShortDesc] = useState("");
  const [enterDescription, setEnterDescription] = useState("");
  const [enterCategory, setEnterCategory] = useState("");
  const [enterPrice, setEnterPrice] = useState("");
  const [enterProductImg, setEnterProductImg] = useState(null);
  const [loading, setLoading] = useState(false);
  const navigate =useNavigate()

  const addProduct = async (e) => {
    e.preventDefault();
    setLoading(true)

    try {
      setLoading(true);

      const docRef = await collection(db, "product");
      const storageRef = ref(storage, `productImages/${Date.now() + enterProductImg.name}`);
      const uploadTask = uploadBytesResumable(storageRef, enterProductImg);

      uploadTask.on(
        "state_changed",
        (snapshot) => {
          // Handle upload progress if needed
        },
        (error) => {
          console.error("Error uploading image:", error);
          toast.error("Image not uploaded!");
          setLoading(false);
        },
        async () => {
          try {
            const downloadURL = await getDownloadURL(uploadTask.snapshot.ref);
            await addDoc(docRef, {
              productName: enterTitle,
              ShortDesc: enterShortDesc,
              Description: enterDescription,
              Category: enterCategory,
              Price: enterPrice,
              imgUrl: downloadURL,
            });
            setLoading(false)
            toast.success("Product successfully added!");
            navigate("/dashboard/all-products");
          } catch (error) {

            console.error("Error adding product:", error);
            setLoading(false)
            toast.error("Failed to add product!");
          } finally {
            setLoading(false);
          }
        }
      );
    } catch (error) {
      console.error("Error:", error);
      toast.error("An error occurred!");
    }
  };

  return (
    <section>
      <Container>
        <Row>
          <Col lg="13">
           {
            loading ? <h4 className="py-5">Loading.......</h4> : <>
             <h4 className="md-5"> Add Product</h4>
            <Form onSubmit={addProduct}>
              <FormGroup className="form__group">
                <span>Product title</span>
                <input
                  type="text"
                  placeholder="Double sofa"
                  value={enterTitle}
                  onChange={(e) => setEnterTitle(e.target.value)}
                  required
                />
              </FormGroup>
              <FormGroup className="form__group">
                <span>Short Description</span>
                <input
                  type="text"
                  placeholder="lorem..."
                  value={enterShortDesc}
                  onChange={(e) => setEnterShortDesc(e.target.value)}
                  required
                />
              </FormGroup>
              <FormGroup className="form__group">
                <span>Description</span>
                <input
                  type="text"
                  placeholder="Description....."
                  value={enterDescription}
                  onChange={(e) => setEnterDescription(e.target.value)}
                  required
                />
              </FormGroup>

              <div className="d-flex align-item-center justify-content-between gap-5">
                <FormGroup className="form__group w-50">
                  <span>Price</span>
                  <input
                    type="number"
                    placeholder="₹100"
                    value={enterPrice}
                    onChange={(e) => setEnterPrice(e.target.value)}
                    required
                  />
                </FormGroup>

                <FormGroup className="form__group w-100 ">
                  <span>Category</span>
                  <select
                    className="w-100 p-2"
                    value={enterCategory}
                    onChange={(e) => setEnterCategory(e.target.value)}
                    required
                  >
                    <option>Select Category</option>
                    <option value="chair">Chair</option>
                    <option value="table">Table</option>
                    <option value="sofa">Sofa</option>
                    <option value="lamp">Chair</option>
                  </select>
                </FormGroup>
              </div>

              <div>
                <FormGroup className="form__group">
                  <span>Product Image</span>
                  <input type="file" onChange={(e) => setEnterProductImg(e.target.files[0])} required />
                </FormGroup>
              </div>

              <button className="primary__btn" type="submit">
                Add product
              </button>
            </Form>
            </>
           }
          </Col>
        </Row>
      </Container>
    </section>
  );
};

export default Addproducts;


-----------------------------------------------------------------------------



import React, {useState, useEffect } from "react";
import Helmet from "../components/Helmet/Helmet";

import { motion } from "framer-motion";
import { Container,Row,Col } from "reactstrap";
import hero2 from '../assets/images/hero2.png';
import offer_img from '../assets/images/offer_img.png';
import '../styles/home.css';
import Services from "../services/services";
import Clock from "../components/UI/Clock";
import { Link } from "react-router-dom";
import ProductList from "../components/UI/ProductList";

import useGetData from "../custom-hooks/useGatData";
const Home = () => {
    
    const {data: product, loading} =useGetData('product')

    const [ trendingProducts, setTrendingProducts ] = useState([]);
    const [ bestSalesProducts, setBestSalesProducts ] = useState([]);
    const [ newarrivalsproducts, setNewArrivalProduct ] =useState([]);
    const [ diningtable, setDiningTable ] = useState([]);
    const [ popularproduct, setPopularProduct ] = useState([]);
    const year = new Date().getFullYear();

    useEffect(() => {
        const filteredTredingProducts = product.filter(
            item => item.category === 'chair'
            );

    
        const filteredBestSalesProducts = product.filter(
            item => item.category === 'lamp'
             );   
        
        const filteredNewArrivalProduct = product.filter(
                item => item.category === 'table'
            );

        const filteredDiningTable = product.filter(
            item => item.category === 'chair'
            );
            
        const filteredPopularProduct = product.filter(
            (item) => item.category === 'sofa'
            );    
        setTrendingProducts(filteredTredingProducts);
        setBestSalesProducts(filteredBestSalesProducts);
        setNewArrivalProduct(filteredNewArrivalProduct);
        setDiningTable(filteredDiningTable);
        setPopularProduct(filteredPopularProduct);
    }, [product]);

    return (
    <Helmet title={"Home"}>
     <section className="hero__section">
      <Container>
        <Row>
            <Col lg='6' md='6'>
                <div className="hero_content">
                    <p className="hero_subtitile">Trending Product in {year}</p>
                    <h2>Make Your Interior More Minimalistic & Modern </h2>
                    <p>
                        Lorem ipsum, dolor sit amet consectetur 
                        adipisicing elit. Quia, quae. 
                        Reprehenderit rem sunt veritatis
                        dignissimos laudantium 
                        quo ipsum nemo nesciunt, 
                        possimus debitis 
                        doloremque! Sapiente odio, 
                        ex repellat 
                        voluptatum nobis veritatis.
                        </p>
                    <motion.button whileHover={{scale: 1.2}} 
                    className="buy_btn">
                        
                        <Link to="/Shop" style={{ textDecoration: 'none' ,color:'black'}}>SHOP NOW</Link>
                        </motion.button>
                    
                </div>
            </Col>
            <Col lg='6' md='6' >
                <div className="hero_img">
                    <img src={hero2} alt="" />
                </div>
            </Col>
        </Row>
      </Container>
     </section>
     <Services />
     <section className="trending__products">
        <Container>
            <Row>
                <Col lg="12" className="text-center">
                    <h2 className="section__title">Trending Products</h2>
                </Col>

                {
                    loading ? <h5 className="fw-bold">Loading....</h5> :
                    <ProductList data={trendingProducts} />
                }
               
            </Row>
        </Container>
     </section>
     <section className="best__sales">
        <Container>
        <Row>
                <Col lg="12" className="text-center">
                    <h2 className="section__title">Best Sales</h2>
                </Col>

                {
                    loading ? <h5 className="fw-bold">Loading....</h5> :
                    <ProductList data={bestSalesProducts}/>
                }
                
            </Row>
        </Container>
     </section>

     <section className="timer__count">
        <Container>
            <Row>
                <Col lg='6' md='6'>
                    <div className="clock__top-content">
                        <h4 className="text-white fs-6 mb-2">Limited Offer</h4>
                        <h3 className="text-white fs-5 mb-3">Quality Armchair</h3>
                    </div>
                    <Clock />
                    <motion.button whileTap={{scale: 1.2}} 
                    className="buy_btn shop__btn ">
                        <Link to="/shop" style={{ textDecoration: 'none',color:'black'}}>Visit Shop</Link></motion.button> 
                </Col>

                <Col lg='6' md='6' className="text-end">
                <img src={offer_img} alt="" />
                </Col>
            </Row>
        </Container>
     </section>
        <section className="new__arrivals">
            <Container>
                <Row>
                <Col lg="12" className="text-center">
                    <h2 className="section__title">New Arrivals</h2>
                </Col>
                
                {
                    loading ? <h5 className="fw-bold">Loading....</h5> :
                    <ProductList data={newarrivalsproducts}/>
                }
                

                
                {
                    loading ? <h5 className="fw-bold">Loading....</h5> :
                    <ProductList data={diningtable}/>
                }
                
                
                </Row>
            </Container>
        </section>
        <section className="popular__category">
            <Container>
                <Row>
                <Col lg="12" className="text-center">
                    <h2 className="section__title">Popular in Category</h2>
                </Col>

                
                {
                    loading ? <h5 className="fw-bold">Loading....</h5> :
                    <ProductList data={popularproduct}/>
                }
                
                
                
                </Row>
            </Container>
        </section>
        

    </Helmet>
    );
};

export default Home;
